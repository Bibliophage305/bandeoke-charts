# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install musescore 3.6
        run: |
          sudo apt install flatpak
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install -y --noninteractive flathub org.musescore.MuseScore
      # Runs a single command using the runners shell
      - name: Run Makefile to make PDFs
        uses: coactions/setup-xvfb@v1
        # with:
        #     run: |
        #         mkdir -p chart-exports # Create the 'exports' subdirectory if it doesn't exist
        #
        #         failures=()
        #
        #         for file in musescore-charts/*.mscz; do
        #             filename=$(basename "$file") # Extract the filename without the extension
        #
        #             echo $filename
        #
        #             output_file="chart-exports/${filename%.*}.pdf" # Replace the extension with '.pdf' and prepend 'chart-exports/'
        #             flatpak run org.musescore.MuseScore -o "$output_file" "$file" # Run the 'mscore' command via flatpak with the updated output filename
        #
        #             if [ ! -f "$output_file" ]; then
        #                 failures+=("$filename") # Add the filename to the failure array
        #                 echo "failure!"
        #             fi
        #         done
        #
        #         # Check if the array is not empty
        #         if [ ${#failures[@]} -gt 0 ]; then
        #             # Print the filenames in the array
        #             echo "The following files failed to export:"
        #             for filename in "${failures[@]}"; do
        #                 echo "$filename"
        #             done
        #         else
        #             echo "All the files exported successfully"
        #         fi
        with:
          working-directory: ./ #optional
          # run: make MSCORE="flatpak run org.musescore.MuseScore"
          run: bash export.sh
      - name: Add Commit and Push
        run: |
          git config --global user.email "me@chrishampson.co.uk"
          git config --global user.name "MuseScore Export Bot"
          git add .
          git commit -am "Updating pdfs"
          git push
